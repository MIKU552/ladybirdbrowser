name: Build Ladybird Browser

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: LadybirdBrowser/ladybird
        submodules: 'recursive' # 如果您的项目包含子模块，请保留此行

    - name: Install Dependencies (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          autoconf \
          autoconf-archive \
          automake \
          build-essential \
          ccache \
          cmake \
          curl \
          fonts-liberation2 \
          git \
          libgl1-mesa-dev \
          nasm \
          ninja-build \
          pkg-config \
          qt6-base-dev \
          qt6-tools-dev-tools \
          qt6-wayland \
          tar \
          unzip \
          zip \
          libpulse-dev  # 根据 BuildInstructionsLadybird.md 推荐安装 PulseAudio 开发包
        # 从 Kitware APT 仓库安装 CMake 3.25+ (详情请参阅 BuildInstructionsLadybird.md)
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
        echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/kitware.list
        sudo apt-get update
        sudo apt-get install -y cmake
        # 安装支持 C++23 的编译器 (推荐 Clang 17+，具体参考 BuildInstructionsLadybird.md)
        sudo wget -O /usr/share/keyrings/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
        echo "deb [signed-by=/usr/share/keyrings/llvm-snapshot.gpg.key] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-19 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt-get update
        sudo apt-get install -y clang-19 lld-19

    - name: Build Ladybird (Linux)
      env:
        CC: clang-19
        CXX: clang++-19
        # BUILD_PRESET 可以根据需求更改为 Distribution_CI, default 等 (参考 CMakePresets.json)
        BUILD_PRESET: CI
      run: |
        ./Meta/ladybird.sh build

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: LadybirdBrowser/ladybird
        submodules: 'recursive' # 如果您的项目包含子模块，请保留此行

    - name: Install Dependencies (macOS)
      run: |
        brew install \
          autoconf \
          autoconf-archive \
          automake \
          ccache \
          cmake \
          nasm \
          ninja \
          pkg-config \
          qt6 # 为 Qt UI 安装 qt6 (详情请参阅 BuildInstructionsLadybird.md)；如果仅构建 AppKit 版本则可省略
        # 确保已选择 Xcode 或 Homebrew LLVM (此处默认使用 Xcode Clang)

    - name: Build Ladybird (macOS)
      env:
        # BUILD_PRESET 可以根据需求更改为 Distribution_CI, default 等 (参考 CMakePresets.json)
        BUILD_PRESET: CI
      run: |
        ./Meta/ladybird.sh build