name: Build Ladybird from External Workflow

on:
  push:
    branches: [ main ] # Or whatever trigger you prefer for your separate repository
  pull_request:
    branches: [ main ] # Or whatever trigger you prefer for your separate repository

env:
  # Common build directory as suggested by ladybird.sh and build instructions,
  # relative to the root of the checked-out Ladybird code.
  BUILD_DIR: Build/release

jobs:
  build_linux:
    name: Build on Linux (Ubuntu)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Ladybird repository
      uses: actions/checkout@v4
      with:
        repository: 'LadybirdBrowser/ladybird' # Explicitly check out the Ladybird repository
        submodules: 'recursive'                # Important for Ladybird's dependencies
        # path: 'ladybird_code'                # Optional: checkout into a subfolder named 'ladybird_code'
                                               # If you use 'path', adjust subsequent script paths and working_directory accordingly.
                                               # For now, it checks out to the workspace root.

    - name: Diagnostic: List files after checkout
      run: |
        echo "Current directory: $(pwd)"
        echo "Workspace root contents ( ${{ github.workspace }} ):"
        ls -la ${{ github.workspace }}
        echo "Looking for Meta directory:"
        ls -la ${{ github.workspace }}/Meta
        echo "Attempting to find ladybird.sh:"
        find ${{ github.workspace }} -name ladybird.sh -ls
      shell: bash

    - name: Install base dependencies for Ladybird
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf autoconf-archive automake build-essential ccache curl \
                                fonts-liberation2 git libgl1-mesa-dev nasm ninja-build pkg-config \
                                qt6-base-dev qt6-tools-dev-tools qt6-wayland tar unzip zip libpulse-dev

    - name: Install CMake (3.25+ from Kitware)
      run: |
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
        echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/kitware.list
        sudo apt-get update -y
        sudo apt-get install -y cmake
        cmake --version

    - name: Install Clang (Clang 19 from LLVM repo)
      run: |
        sudo wget -O /usr/share/keyrings/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key
        echo "deb [signed-by=/usr/share/keyrings/llvm-snapshot.gpg.key] https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-19 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt-get update -y
        sudo apt-get install -y clang-19 clangd-19 clang-tools-19 clang-format-19 clang-tidy-19 lld-19

    - name: Build Ladybird using ladybird.sh
      shell: bash
      run: |
        echo "Attempting to run ladybird.sh from: ${{ github.workspace }}/Meta/ladybird.sh"
        chmod +x ${{ github.workspace }}/Meta/ladybird.sh
        # This assumes ladybird.sh and its CMake scripts correctly handle being run from the workspace root
        # where the Ladybird code has been checked out.
        ${{ github.workspace }}/Meta/ladybird.sh build ladybird # Adjust if 'ladybird' is not the correct target or if no target is needed.

    - name: Archive Linux build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ladybird-linux
        path: |
          ${{ github.workspace }}/${{ env.BUILD_DIR }}/bin/Ladybird
          # Add other executables or relevant files here if needed
        if-no-files-found: error

  build_macos:
    name: Build on macOS
    runs-on: macos-latest # Should provide Xcode 15+
    steps:
    - name: Checkout Ladybird repository
      uses: actions/checkout@v4
      with:
        repository: 'LadybirdBrowser/ladybird' # Explicitly check out the Ladybird repository
        submodules: 'recursive'                # Important for Ladybird's dependencies
        # path: 'ladybird_code'                # Optional: checkout into a subfolder. Adjust paths if used.

    - name: Diagnostic: List files after checkout
      run: |
        echo "Current directory: $(pwd)"
        echo "Workspace root contents ( ${{ github.workspace }} ):"
        ls -la ${{ github.workspace }}
        echo "Looking for Meta directory:"
        ls -la ${{ github.workspace }}/Meta
        echo "Attempting to find ladybird.sh:"
        find ${{ github.workspace }} -name ladybird.sh -ls
      shell: bash

    - name: Install Xcode command line tools (if not pre-installed)
      run: xcode-select --install || true # Allow to continue if already installed

    - name: Install essential macOS dependencies via Homebrew
      run: |
        brew install autoconf autoconf-archive automake ccache cmake nasm ninja pkg-config

    - name: Build Ladybird using ladybird.sh (with Xcode Clang)
      shell: bash
      run: |
        echo "Attempting to run ladybird.sh from: ${{ github.workspace }}/Meta/ladybird.sh"
        chmod +x ${{ github.workspace }}/Meta/ladybird.sh
        ${{ github.workspace }}/Meta/ladybird.sh build ladybird # Adjust if 'ladybird' is not the correct target or if no target is needed.

    - name: Archive macOS build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ladybird-macos
        path: |
          ${{ github.workspace }}/${{ env.BUILD_DIR }}/bin/Ladybird.app
          # Add other executables or relevant files here if needed
        if-no-files-found: error